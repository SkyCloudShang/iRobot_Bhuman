bush = cppApplication + {
  folder = "Utils"
  root = { "$(srcDirRoot)/Utils/bush", "$(srcDirRoot)" }

  files = {
    "$(srcDirRoot)/Utils/bush/**.cpp" = cppSource
    "$(srcDirRoot)/Utils/bush/**.h"
    "$(srcDirRoot)/Platform/$(OS)/*.cpp" = bhCppSource
    "$(srcDirRoot)/Platform/$(OS)/*.h"
    "$(srcDirRoot)/Platform/*.cpp" = bhCppSource
    "$(srcDirRoot)/Platform/*.h"
    "$(srcDirRoot)/Controller/Platform/Directory.h"
    "$(srcDirRoot)/Tools/AlignedMemory.cpp" = cppSource
    "$(srcDirRoot)/Tools/AlignedMemory.h"
    "$(srcDirRoot)/Tools/Global.cpp" = cppSource
    "$(srcDirRoot)/Tools/Global.h"
    "$(srcDirRoot)/Tools/Streams/**.cpp" = cppSource
    "$(srcDirRoot)/Tools/Streams/**.h"

    if (host == "Win32") {
      "$(srcDirRoot)/Utils/bush/bush.rc" = rcSource

      // Qt libraries
      if (configuration == "Debug") {
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Concurrentd.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Cored.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Guid.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Widgetsd.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/plugins/platforms/qwindowsd.dll" = copyFile + {
          output = "$(buildDir)/platforms/qwindowsd.dll"
        }
      } else {
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Concurrent.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Core.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Gui.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib/Qt5Widgets.dll" = copyFile
        "$(utilDirRoot)/SimRobot/Util/qt/Windows/plugins/platforms/qwindows.dll" = copyFile + {
          output = "$(buildDir)/platforms/qwindows.dll"
        }
      }
    }
  }

  qtRessourceFiles = "$(srcDirRoot)/Utils/bush/icons/*.png"
  qtRccFiles = "$(srcDirRoot)/Utils/bush/*.qrc"
  qtMocFiles = {
    "$(srcDirRoot)/Utils/bush/Session.h"
    "$(srcDirRoot)/Utils/bush/agents/PingAgent.h"
    "$(srcDirRoot)/Utils/bush/agents/PowerAgent.h"
    "$(srcDirRoot)/Utils/bush/cmdlib/ProcessRunner.h"
    "$(srcDirRoot)/Utils/bush/cmdlib/Context.h"
    "$(srcDirRoot)/Utils/bush/cmdlib/AbstractConsole.h"
    "$(srcDirRoot)/Utils/bush/ui/Console.h"
    "$(srcDirRoot)/Utils/bush/ui/VisualContext.h"
    "$(srcDirRoot)/Utils/bush/ui/MainWindow.h"
    "$(srcDirRoot)/Utils/bush/ui/RobotPool.h"
    "$(srcDirRoot)/Utils/bush/ui/RobotView.h"
    "$(srcDirRoot)/Utils/bush/ui/ShortcutBar.h"
    "$(srcDirRoot)/Utils/bush/ui/TeamSelector.h"
    "$(srcDirRoot)/Utils/bush/ui/TeamView.h"
    "$(srcDirRoot)/Utils/bush/ui/CommandLineCompleter.h"
  }
  files += qtFiles

  includePaths = {
    "$(srcDirRoot)"
    "$(utilDirRoot)/GameController/include"
    if (platform == "Linux") {
      "/usr/include/qt5"
      "/usr/include/qt5/QtConcurrent"
      "/usr/include/qt5/QtCore"
      "/usr/include/qt5/QtGui"
      "/usr/include/qt5/QtWidgets"
      "/usr/include/qt"
      "/usr/include/qt/QtConcurrent"
      "/usr/include/qt/QtCore"
      "/usr/include/qt/QtGui"
      "/usr/include/qt/QtWidgets"
      "/usr/include/x86_64-linux-gnu/qt5"
      "/usr/include/x86_64-linux-gnu/qt5/QtConcurrent"
      "/usr/include/x86_64-linux-gnu/qt5/QtCore"
      "/usr/include/x86_64-linux-gnu/qt5/QtGui"
      "/usr/include/x86_64-linux-gnu/qt5/QtWidgets"
    }
    if (host == "Win32") {
      "$(utilDirRoot)/SimRobot/Util/qt/Windows/include"
      "$(utilDirRoot)/SimRobot/Util/qt/Windows/include/QtConcurrent"
      "$(utilDirRoot)/SimRobot/Util/qt/Windows/include/QtCore"
      "$(utilDirRoot)/SimRobot/Util/qt/Windows/include/QtGui"
      "$(utilDirRoot)/SimRobot/Util/qt/Windows/include/QtWidgets"
      "$(utilDirRoot)/Buildchain/Windows/include"
    }
  }

  defines += {
    "TARGET_TOOL"
    if (host == "Win32") {
      "_CRT_SECURE_NO_DEPRECATE"
    }
    if (configuration != "Debug") {
      "QT_NO_DEBUG"
    }
  }

  libs = {
    if (platform == "Linux") {
      "Qt5Concurrent", "Qt5Gui", "Qt5Core", "Qt5Widgets"
      "rt", "pthread"
    }
    if (host == "Win32") {
      if (configuration == "Debug") {
        "Qt5Concurrentd", "Qt5Guid", "Qt5Cored", "Qt5Widgetsd", "qtmaind"
      } else {
        "Qt5Concurrent", "Qt5Gui", "Qt5Core", "Qt5Widgets", "qtmain"
      }
      "ws2_32", "winmm"
    }
  }

  libPaths = {
    if (host == "Win32") {
      "$(utilDirRoot)/SimRobot/Util/qt/Windows/lib"
    }
  }

  linkFlags += {
    if (tool == "vcxproj" && configuration == "Debug") {
      "/NODEFAULTLIB:msvcrt.lib"
    }
  }

  visualizers = {
    "$(utilDirRoot)/Buildchain/Windows/Visualizers/qt5.natvis"
  }
}
